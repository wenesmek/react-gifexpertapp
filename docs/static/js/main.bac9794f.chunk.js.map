{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","onFocus","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAI1B,EAAoCC,mBAFd,+BAEtB,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OAEO,sBAAMC,SAfQ,SAAEC,GAEnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,MAQf,SACC,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAzBc,SAAEP,GAGxBF,EAAcE,EAAEQ,OAAOF,QAuBfG,QAAU,kBAAMX,EAAc,U,+BClCjCY,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAIbC,EAJa,iDAIoCC,UAAUH,GAJ9C,+DAMAI,MAAMF,GANN,cAMbG,EANa,gBAQIA,EAAKC,OART,uBAQXC,EARW,EAQXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAI1Ca,QAAQC,IAAIR,GAlBO,kBAoBZA,GApBY,4CAAH,sDCAPS,EAAc,SAAC,GAAwB,IAAtBN,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OADAa,QAAQC,IAAIL,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,2DAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAGtB,ECJwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAfAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFH,EAAS,CAELjB,KAAMoB,EACNL,SAAS,SAMtB,CAACtB,IAEGuB,EDpB2BK,CAAc5B,GAAlCa,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAatB,OAXAP,QAAQC,IAAIM,GAYR,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAEjDsB,GAAW,mBAAGJ,UAAU,mCAAb,wBAGb,qBAAKA,UAAU,YAAf,SAIQL,EAAOJ,KAAI,SAACC,GAAD,OAEP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aE/BxBkB,EAAe,WAIxB,MAAoC5C,mBAAS,IAA7C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQS,EAAWgB,KAAI,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CAEIA,SAAYA,GADNA,Y,MCnBlC8B,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.bac9794f.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    \n    const primerMensaje = 'Introduzca una categorÃ­a'\n\n    const [inputValue, setInputValue] = useState(primerMensaje);\n\n    const handleInputChange = ( e ) => {\n        \n\n        setInputValue(e.target.value);\n    }\n\n    const handelSubmit = ( e ) => {\n\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2 ){\n            \n            setCategories(categories => [ inputValue, ...categories]);\n            setInputValue('');\n\n        }\n\n    }\n\n    return (\n        \n           <form onSubmit={ handelSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n                onFocus={ () => setInputValue('')}\n                \n            />\n        </form> \n    )\n}\n\n\nAddCategory.propTypes = {\n\n    setCategories: PropTypes.func.isRequired\n\n}\n","\n\nexport const getGifs = async ( category ) => {\n\n\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=xBlyFeCYZurdn6tLEmKFreGm1LoHja15`;\n\n    const resp = await fetch(url);\n\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        };\n    });\n\n    console.log(gifs);\n\n    return gifs;\n\n};","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n\n    console.log(id, title, url);\n    return (\n        <div className=\"card animate__animated animate__fadeIn animate__delay-2s\">\n            <img src={url} alt={title}/>\n            <p>{title}</p> \n        </div>\n    )\n}\n","// import React, { useState, useEffect } from 'react';\n\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    \n    const { data: images, loading } = useFetchGifs( category );\n\n    console.log(loading);\n    \n   \n\n\n\n\n\n\n    //  getGifs();\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n\n            \n            <div className=\"card-grid\">\n\n\n                {\n                    images.map((img) =>\n\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n\n                    )\n\n                }\n\n\n            </div>\n        </>\n    );\n};\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => {\n                setState({\n\n                    data: imgs,\n                    loading: false\n\n                });\n\n            });\n\n    }, [category]);\n\n    return state;\n};","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    \n\n    const [categories, setCategories] = useState([]);\n\n    \n    \n    \n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr></hr>\n\n            \n\n            <ol>\n                { \n                    categories.map(category => \n\n                        <GifGrid\n                            key={ category }\n                            category = {category} \n                        />\n\n                        \n                    )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}